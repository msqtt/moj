// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"google.golang.org/grpc"
	"moj/apps/web-bff/etc"
	"moj/apps/web-bff/graph"
	"moj/apps/web-bff/handler"
	"moj/apps/web-bff/oss"
	"moj/apps/web-bff/rpc"
	"moj/apps/web-bff/token"
)

// Injectors from wire.go:

func InitializeApplication() *App {
	config := etc.NewAppConfig()
	rpcClients := provideRpcClients(config)
	tokener := token.NewPasetoTokener(config)
	sessionManager := token.NewSessionManager(config, tokener)
	resolver := graph.NewResolver(config, rpcClients, sessionManager)
	uploader := oss.NewMinioOssUploader()
	avatarFileHandler := handler.NewAvatarHandler(uploader, config, sessionManager)
	caseFileHandler := handler.NewCaseFileHandler(uploader)
	app := NewApp(config, resolver, rpcClients, avatarFileHandler, caseFileHandler)
	return app
}

// wire.go:

func provideRpcClients(conf *etc.Config) *rpc.RpcClients {
	ret := &rpc.RpcClients{}
	var conn *grpc.ClientConn

	ret.UserClient, ret.CaptchaClient, conn = rpc.NewUserAndCaptchaClient(conf)
	ret.Connects = append(ret.Connects, conn)

	ret.QuestionClient, conn = rpc.NewQuestionClient(conf)
	ret.Connects = append(ret.Connects, conn)

	ret.GameClient, conn = rpc.NewGameClient(conf)
	ret.Connects = append(ret.Connects, conn)

	ret.RecordClient, conn = rpc.NewRecordClient(conf)
	ret.Connects = append(ret.Connects, conn)

	return ret
}

var providers = wire.NewSet(etc.NewAppConfig, graph.NewResolver, token.NewPasetoTokener, token.NewSessionManager, handler.NewAvatarHandler, handler.NewCaseFileHandler, oss.NewMinioOssUploader, provideRpcClients)
