syntax = "proto3";

package user;

option go_package = "./user_pb";

service UserService {
    rpc Login(LoginRequest) returns (LoginResponse) {}
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
    rpc GetUserPage(GetUserPageRequest) returns (GetUserPageResponse) {}
    rpc UpdateUserInfo(UpdateUserInfoRequest) returns (UpdateUserInfoResponse) {}
    rpc ChangeUserPassword(ChangeUserPasswordRequest) returns (ChangeUserPasswordResponse) {}
    rpc SetAdmin(SetAdminRequest) returns (SetAdminResponse) {}
    rpc SetStatus(SetStatusRequest) returns (SetStatusResponse) {}
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
}

message LoginRequest {
    string email = 1;
    string password = 2;
    string device = 3;
    string ipAddr = 4;
}

message LoginResponse { 
    string accountID = 1;
    int64 time = 2;
}

message RegisterRequest {
    string email = 1;
    string nickName = 2;
    string password = 3;
    string captcha = 4;
}

message RegisterResponse {
    int64 time = 1;
}

message User {
	string accountID = 1;
	string email = 2;
	string avatarLink = 3;
	string nickName = 4;
	bool enabled = 5;
	bool isAdmin = 6;
	int64 lastLoginTime = 7;
	string lastLoginIPAddr = 8;
	string lastLoginDevice = 9;
	int64 lastPasswdChangeTime = 10;
	int64 registerTime = 11;
	int64 deleteTime = 12;
}

message GetUserRequest {
    string accountID = 1;
}

message GetUserResponse {
    User user = 1;
}

message GetUserPageRequest {
    string cursor = 1;
    int32 pageSize = 2;
    message Option {
        optional string word = 1;
        optional bool enabled = 2;
        optional bool isAdmin = 3;
    }
    optional Option filterOptions = 3;
}


message GetUserPageResponse{
    repeated User users = 1;
    string nextCursor = 2;
}

message UpdateUserInfoRequest {
    string accountID = 1;
    string nickName = 2;
    string avatarLink = 3;
}

message UpdateUserInfoResponse {
    int64 time = 1;
}

message ChangeUserPasswordRequest {
    string accountID = 1;
    string email = 2;
    string password = 3;
    string captcha = 4;
}

message ChangeUserPasswordResponse {
    int64 time = 1;
}

message SetAdminRequest {
    string accountID = 1;
    bool isAdmin = 2;
}

message SetAdminResponse{
    int64 time = 1;
}

message SetStatusRequest {
    string accountID = 1;
    bool enabled = 2;
}

message SetStatusResponse{
    int64 time = 1;
}

message DeleteUserRequest {
    string accountID = 1;
}

message DeleteUserResponse{
    int64 time = 1;
}

service CaptchaService {
    rpc SendRegisterCaptcha(SendRegisterCaptchaRequest) returns (SendRegisterCaptchaResponse) {}
    rpc SendChangePasswdCaptcha(SendChangePasswdCaptchaRequest) returns (SendChangePasswdCaptchaResponse) {}
}

message SendRegisterCaptchaRequest {
    string email = 1;
    string ipAddr = 2;
}

message SendRegisterCaptchaResponse {
    int64 time = 1;
}


message SendChangePasswdCaptchaRequest {
    string accountID = 1;
    string email = 2;
    string ipAddr = 3;
}

message SendChangePasswdCaptchaResponse {
    int64 time = 1;
}