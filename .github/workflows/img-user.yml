on:
  release:
    types: [published]

  workflow_dispatch:
  
env:
  APP_NAME: user

jobs:
  image-build-user:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Get latest release tag
      id: get_release
      uses: actions/github-script@v6
      with:
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 1,
          });
          const latestReleaseTag = releases[0]?.tag_name || 'none';
          console.log(`Latest release tag: ${latestReleaseTag}`);
          core.setOutput('tag', latestReleaseTag);

    - name: Set whole image tag
      id: set_env
      run: | 
        echo "TAG=msqt/moj-${{ env.APP_NAME }}:${{ steps.get_release.outputs.tag }},msqt/moj-${{ env.APP_NAME }}:latest" >> $GITHUB_ENV
    
    - name: Set up QEMU
      if: ${{ steps.get_release.outputs.result != 'none' }}
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      if: ${{ steps.get_release.outputs.result != 'none' }}
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      if: ${{ steps.get_release.outputs.result != 'none' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      if: ${{ steps.get_release.outputs.result != 'none' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        file: builds/${{ env.APP_NAME }}.Dockerfile
        tags: ${{ env.TAG }}
        platforms: linux/amd64
        push: true
